
# -*- mode: ruby -*-
# vim: set ft=ruby :

$preinstall = <<SCRIPT
sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
systemctl restart sshd
ssh-keygen -t rsa -f /root/.ssh/id_rsa -q -P ""
ssh-keygen -t rsa -f /home/vagrant/.ssh/id_rsa -q -P ""
yum install sshpass wget -y
wget https://github.com/borgbackup/borg/releases/download/1.1.14/borg-linux64
cp borg-linux64 /usr/local/bin/borg
chown root:root /usr/local/bin/borg
chmod 755 /usr/local/bin/borg
alias borg="/usr/local/bin/borg"
echo "alias borg=/usr/local/bin/borg" >> /root/.bashrc
SCRIPT

home = ENV['HOME']
ENV["LC_ALL"] = "en_US.UTF-8"

MACHINES = {
  :server => {
        :box_name => "centos/7",
        :box_version => "1804.02",
        :ip_addr => '192.168.11.100',
        :disks => {
                :sata1 => {
                :dfile => home + '/VirtualBox VMs/sata1.vdi',
                :size => 2048,
                :port => 1
                }
        }
  },
}

Vagrant.configure("2") do |config|
    config.vm.box_version = "1804.02"
    MACHINES.each do |boxname, boxconfig|

        config.vm.define boxname do |box|

            box.vm.box = boxconfig[:box_name]
            box.vm.host_name = boxname.to_s
            box.vm.network "private_network", ip: boxconfig[:ip_addr]
            box.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--memory", "1024"]
                needsController = false
                    boxconfig[:disks].each do |dname, dconf|
                        unless File.exist?(dconf[:dfile])
                        vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                        needsController =  true
                        end

                    end
                if needsController == true
                    vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                    boxconfig[:disks].each do |dname, dconf|
                        vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                        end
                    end
                end
            box.vm.provision "shell", path: "pv_create.sh"
            box.vm.provision "shell", inline: $preinstall
            end
        end

    config.vm.define "client" do |client|
        client.vm.box = "centos/7"
        client.vm.hostname="client"
        client.vm.network :private_network, ip: "192.168.11.101"
        client.vm.provider "virtualbox" do |vb|
          vb.memory = "1024"
          vb.cpus = "1"
        end
        client.vm.provision "file", source: "./borgbackup.sh", destination: "$HOME/borgbackup.sh"
        client.vm.provision "shell", inline: $preinstall
        client.vm.provision "shell", inline: <<-EOC
        echo "192.168.11.100 server" >> /etc/hosts
        sshpass -p "vagrant" ssh-copy-id -o StrictHostKeyChecking=no root@server
        sshpass -p "vagrant" ssh-copy-id -o StrictHostKeyChecking=no vagrant@server
        printf "123456\n123456\n\ny" | /usr/local/bin/borg init --encryption=repokey root@server:/var/backup/$(hostname)-etc
        EOC
        client.vm.provision "shell", path: "systemd_timer.sh"
    end

end
